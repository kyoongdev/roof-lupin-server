import { type DateProps } from '@/common';
import { ImageDTO } from '@/modules/file/dto';
import { HostDTO, type HostDTOProps } from '@/modules/host/dto';
import { OpenHourDTO, OpenHourDTOProps } from '@/modules/host/dto/openHour';
import { LocationDTO, LocationDTOProps } from '@/modules/location/dto';
import { BestPhotoDTO, BestPhotoDTOProps } from '@/modules/review/dto';
import { ReviewDTO, ReviewDTOProps } from '@/modules/review/dto/review.dto';
import { SpaceCategoryDTO, SpaceCategoryDTOProps } from './category';
import { CautionDTO, type CautionDTOProps } from './caution';
import { BuildingDTO, type BuildingDTOProps } from './facility';
import { SpaceHolidayDTO, SpaceHolidayDTOProps } from './holiday';
import { RefundPolicyDTO, type RefundPolicyDTOProps } from './refund';
import { ServiceDTO, ServiceDTOProps } from './service';
import { SizeDTO, SizeDTOProps } from './size';
import { TransportationDTO, TransportationDTOProps } from './transportaion';
export interface SpaceDetailDTOProps extends DateProps {
    id: string;
    title: string;
    averageScore: number;
    reviewCount: number;
    isBest?: boolean;
    thumbnail: string;
    location: LocationDTOProps;
    description: string;
    minSize: number;
    buildingType: number;
    deposit?: number;
    minUser: number;
    maxUser: number;
    overflowUserCost: number;
    overflowUserCount: number;
    qnaCount: number;
    orderNo: number;
    isInterested?: boolean;
    host: HostDTOProps;
    isImmediateReservation: boolean;
    images: ImageDTO[];
    refundPolicies: RefundPolicyDTOProps[];
    cautions: CautionDTOProps[];
    buildings: BuildingDTOProps[];
    services: ServiceDTOProps[];
    categories: SpaceCategoryDTOProps[];
    publicTransportations: TransportationDTOProps[];
    sizes: SizeDTOProps[];
    bestPhotos: BestPhotoDTOProps[];
    reviews: ReviewDTOProps[];
    openHours: OpenHourDTOProps[];
    holidays: SpaceHolidayDTOProps[];
}
export declare class SpaceDetailDTO {
    id: string;
    title: string;
    averageScore: number;
    reviewCount: number;
    deposit: number;
    isBest?: boolean;
    thumbnail: string;
    location?: LocationDTO;
    description: string;
    minSize: number;
    buildingType?: number;
    minUser: number;
    maxUser: number;
    overflowUserCost: number;
    overflowUserCount: number;
    qnaCount: number;
    orderNo: number;
    isInterested: boolean;
    host: HostDTO;
    isImmediateReservation: boolean;
    images: ImageDTO[];
    refundPolicies: RefundPolicyDTO[];
    reviews: ReviewDTO[];
    cautions: CautionDTO[];
    buildings: BuildingDTO[];
    services: ServiceDTO[];
    categories: SpaceCategoryDTO[];
    publicTransportations: TransportationDTO[];
    sizes: SizeDTO[];
    bestPhotos: BestPhotoDTO[];
    openHours: OpenHourDTO[];
    holidays: SpaceHolidayDTO[];
    constructor(props: SpaceDetailDTOProps);
}
